# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master


variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: poc_test_connection

  # Web app name
  webAppName: cedrus-poc-ui

  # Environment name
  # environmentName: '{{ webAppName }}'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

pool:
  vmImage: ubuntu-latest

# stages:
# - stage: Build
#   displayName: Build stage
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: $(vmImageName)

#     steps:
#     - task: ArchiveFiles@2
#       displayName: 'Archive files'
#       inputs:
#         rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
#         includeRootFolder: false
#         archiveType: zip
#         archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#         replaceExistingArchive: true

#     - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#       artifact: drop

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: $(environmentName)
#     pool:
#       vmImage: $(vmImageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureRmWebAppDeployment@4
#             displayName: 'Azure App Service Deploy: $(webAppName) '
#             inputs:
#               azureSubscription: $(azureSubscription)
#               appType: webAppLinux
#               WebAppName: $(webAppName)
#               packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
#               RuntimeStack: 'NODE|12.x'
#               # StartupCommand: 'npm run start'
#               # ScriptType: 'Inline Script'
#               # InlineScript: |
#               #   npm install
              #   npm run build --if-present

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'
  
- task: CopyFiles@2
  displayName: 'Copy files'
  inputs:
    sourceFolder: 'build' 
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true

# - task: ArchiveFiles@2
#   displayName: 'Archive files'
#   inputs:
#     rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
#     includeRootFolder: false
#     # archiveType: zip
#     archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)


- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    # tarCompression: gz
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true


- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs: 
    pathtoPublish:  '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    # PathtoPublish: '$(build.artifactstagingdirectory)'

- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy to App Service'
  inputs:
    azureSubscription: poc_test_connection
    appType: webAppLinux
    WebAppName: cedrus-poc-ui
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    # StartupCommand: 'npm run start'
    # ScriptType: 'Inline Script'
    # InlineScript: |
    #   npm install
    #   npm run build --if-present
      
    # package: '$(System.ArtifactsDirectory)'
