# # Node.js with React
# # Build a Node.js project that uses React.
# # Add steps that analyze code, save build artifacts, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pr: none

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: poc_test_connection
  # Web app name
  webAppName: cedrus-poc-ui
  # Environment name
  environmentName: cedrus-poc-ui
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # This needs to have a static website setup with the default container ($web)
  clientBlobAccountName: 'cedruspocstorage'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildSite
        displayName: Build Site
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: 'Install Node.js'
          
          - script: |
              npm install
              npm run build
            displayName: 'npm install and build'

          # - script: |
          #     npm ci
          #     npm run build --if-present
          #   displayName: 'npm install, build'
          #   env:
          #     CI: true
          #     REACT_APP_API_DOMAIN: '$(apiDomain)'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/build/'
              Contents: |
                $(System.DefaultWorkingDirectory)/build/**/*
              TargetFolder: '$(Build.ArtifactStagingDirectory)/output-site'
            displayName: 'Copy site files to artifact directory'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/output-site'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Site.zip
              replaceExistingArchive: true

          - task: PublishPipelineArtifact@0
            displayName: 'Publish site pipeline artifacts'
            inputs:
              artifactName: "$(Build.BuildId)-Site"
              targetPath: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Site.zip

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploySite
        displayName: Deploy Site Production
        environment: 'production'
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@1
                  displayName: 'Download Pipeline Artifacts'
                  inputs:
                    artifactName: "$(Build.BuildId)-Site"
                    buildType: 'current'

                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.ArtifactsDirectory)/$(Build.BuildId)-Site.zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/unzip/$(Build.BuildId)-Site'
                    cleanDestinationFolder: true

                - task: AzureCLI@2
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: 'az storage blob upload-batch -d "\$web" --account-name "$(clientBlobAccountName)" -s "$(System.DefaultWorkingDirectory)/unzip/$(Build.BuildId)-Site/"'



 
#################deploy on app service
# variables:
#   # Azure Resource Manager connection created during pipeline creation
#   azureSubscription: poc_test_connection
#   # Web app name
#   webAppName: cedrus-poc-ui
#   # Environment name
#   environmentName: cedrus-poc-ui
#   # Agent VM image name
#   vmImageName: 'ubuntu-latest'

# pool:
#   vmImage: ubuntu-latest


# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '12.x'
#   displayName: 'Install Node.js'

# - script: |
#     npm install
#     npm run build
#   displayName: 'npm install and build'
  
# # - task: CopyFiles@2
# #   displayName: 'Copy files'
# #   inputs:
# #     sourceFolder: 'build' 
# #     Contents: '**/*'
# #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
# #     cleanTargetFolder: true

# - task: ArchiveFiles@2
#   displayName: 'Archive files'
#   inputs:
#     rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
#     includeRootFolder: false
#     archiveType: zip
#     archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#     replaceExistingArchive: true

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Build Artifacts'
#   inputs: 
#     pathtoPublish:  '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

# - task: AzureRmWebAppDeployment@4
#   displayName: 'Deploy to App Service'
#   inputs:
#     azureSubscription: poc_test_connection
#     appType: webAppLinux
#     WebAppName: cedrus-poc-ui
#     packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    
